/*输入不超过20个非负整数（输入每个整数后按回车，以-1结束且不计入整数个数），用一维数组作函数参数编程实现如下功能：
（1）录入每个整数，函数原型：unsigned short ReadNumber(int num[])，num存储输入的整数，返回值为输入整数的个数；
（2）按由高到低的顺序排序，函数原型：void SortNumberDescending(int num[], unsigned short n)，n为整数个数；
（3）对这些整数求和及平均值，函数原型：void SummingAveraging(int num[], unsigned short n, int *pSum, float *pAver)，pSum指向和变量，pAver指向平均值变量；
（4）输出这些整数，函数原型：void  PrintNumber(int num[], unsigned short n) 。
主函数中按以下示例形式提示输入、调用函数（1）、调用函数（2）、提示输出、调用函数（4）、调用函数（3）、输出整数和及平均值。
Input Numbers:
87
100
...
23
-1

Sort in descending order:
100
...
23

Sum=474,Aver=59.25

输入格式：
"Input Numbers:\n"
"%d"
输出格式：
"\nSort in descending order:\n"
"\nSum=%d,Aver=%.2f\n"
"%d\n"/*



#include<stdio.h>
unsigned short ReadNumber(int a[])
{
	int n,i;
	printf("Input Numbers:\n");
	for(n=0;n<=19;n++)
	{
		scanf("%d",&a[n]);
		if(a[n]==-1) break;
	}
	return n;
}

void SummingAveraging(int a[], unsigned short n, int *pSum, float *pAver)
{
	int i;
	for(i=0;i<=n-1;i++)
	{
		*pSum+=a[i];
	}
	*pAver=(*pSum+0.0)/i; 
}

void SortNumberDescending(int a[], unsigned short n)
{
	int i,swap,t,j;
	for(i=0;i<n-1;i++)
	{
		for(t=i,j=i;j<=n-1;j++)
		{
			if(a[t]<a[j]) t=j;
		}
		swap=a[i];
		a[i]=a[t];
		a[t]=swap;
	}
}

void  PrintNumber(int a[], unsigned short n)
{
	int i;
	printf("\nSort in descending order:\n");
	for(i=0;i<=n-1;i++)
	{
		printf("%d\n",a[i]);
	}	
}

int main()
{
	int a[20],sum=0;
	float aver;
	unsigned short n;
	int *pSum=&sum;
	float *pAver=&aver;
	n=ReadNumber(a);
	SortNumberDescending(a,n);
	SummingAveraging(a,n,pSum,pAver);
	PrintNumber(a,n);
	printf("\nSum=%d,Aver=%.2f\n",sum,aver);
	return 0;
}
